install.packages("lme4")
install.packages("mlmRev")
library(lme4)
library(mlmRev)
my_data <- data("Hsb82")
head(my_data)
my_data <- data(Hsb82)
my_data <- data(Hsb82)
head(my_data)
head(Hsb82)
my_mod <- lmer(mAch ~ ses + meanses + sx + minrty + (1 | school), data = Hsb82)
summary(my_mod)
anova(my_mod)
install.packages("mice")
library(mice)
install.packages("dplyr")
library(dplyr)
insert_nas <- function(x) {
len <- length(x)
n <- sample(1:floor(0.2*len), 1)
i <- sample(1:len, n)
x[i] <- NA
x
}
my_data <- select(Hsb82, mAch, ses, meanses, sx, minrty)
data_miss <- sapply(my_data, insert_nas)
data_miss
is.data.frame(data_miss)
data_total <- as.data.frame(cdbind(Hsb82$school, data_miss))
data_total <- as.data.frame(cbind(Hsb82$school, data_miss))
head(data_total)
names(data_total)[1] <- "school"
colSums(is.na(data_total)) / nrow(data_total)
imp <- mice(nhanes, seed = 23109)
fit <- with(imp, lm(chl ~ age + bmi))
fit <- with(imp, lm(chl ~ age + bmi))
print(pool(fit))
round(summary(pool(fit)), 2)
anova(pool(fit))
mean(c(89, 72, 94, 69))
(72 - 81)/(94 - 69)
(89 - 81)/(94 - 69)
web_page <- readLines("http://boston.menupages.com/restaurants/a4-truck/menu")
head(web_page)
web_page <- readLines("http://boston.menupages.com/restaurants/a4-truck/menu")
head(web_page)
web_page <- readLines("http://boston.menupages.com/restaurants/downtown-north-end/all-neighborhoods/all-cuisines/")
head(web_page)
web_page
web_page <- readLines("http://boston.menupages.com/restaurants/downtown-north-end/all-neighborhoods/all-cuisines/")
head(web_page)
install.packages("rvest")
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
lego_movie %>%
html_node("strong span")
lego_movie %>%
html_nodes("#titleCast .itemprop span")
restaurants <- html("http://www.imdb.com/title/tt1490017/")
rm(list = ls())
library(rvest)
restaurants <- html("http://www.imdb.com/title/tt1490017/")
restaurants <- readLines("http://boston.menupages.com/restaurants/downtown-north-end/all-neighborhoods/all-cuisines/")
head(web_page)
restaurants %>%
html_node(".link")
restaurants %>%
html_nodes(".link")
restaurants %>%
html_nodes("content-main")
restaurants %>%
html_nodes("#content-main")
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
lego_movie %>%
html_node("strong span")
restaurants %>%
html_node("#content-main")
restaurants <- html("http://boston.menupages.com/restaurants/downtown-north-end/all-neighborhoods/all-cuisines/")
head(web_page)
head(restaurants)
restaurants %>%
html_node(".name-address")
restaurants %>%
html_node(".link")
restaurants %>%
html_nodes(".link")
restaurants %>%
html_node(".link")
restaurants %>%
html_node(".link") %>%
html_text()
restaurants %>%
html_node(".link") %>%
html_text() %>%
as.numeric()
restaurants %>%
html_nodes(".link") %>%
html_text()
restaurants %>%
html_nodes(".link")
restaurants %>%
html_nodes(".link")
restaurants %>%
html_node(".link")
restaurants %>%
html_node(".link") %>%
html_text()
?substring
restaurants %>%
html_node(".link") %>%
html_text() %>%
substring(2)
restaurants %>%
html_nodes(".link") %>%
html_text() %>%
substring(2)
restaurants %>%
html_nodes(".link") %>%
html_link()
restaurants %>%
html_nodes(".link") %>%
html_text()
head(restaurants)
restaurants <- readLines("http://boston.menupages.com/restaurants/downtown-north-end/all-neighborhoods/all-cuisines/")
head(restaurants)
restaurants %>%
html_nodes(".link")
restaurants <- html("http://boston.menupages.com/restaurants/downtown-north-end/all-neighborhoods/all-cuisines/")
head(restaurants)
restaurants %>%
html_nodes(".link")
restaurants %>%
html_nodes(".link href")
restaurants %>%
html_nodes(".link href") %>%
%>% html_attr("href")
restaurants %>%
html_nodes(".link") %>%
html_attr("href")
place_links <- restaurants %>%
html_nodes(".link") %>%
html_attr("href")
the_link <- place_links[1]
the_link
paste(the_link, "/menu")
paste0(the_link, "/menu")
paste0(the_link, "menu")
paste0(base_url, the_link, "menu")
base_url <- "http://boston.menupages.com"
paste0(base_url, the_link, "menu")
the_menu <- html(paste0(base_url, the_link, "menu"))
the_menu %>%
html_nodes("th")
the_menu %>%
html_nodes("th") %>%
html_text()
the_link <- place_links[2]
the_menu <- html(paste0(base_url, the_link, "menu"))
the_menu %>%
html_nodes("th")
install.packages("DBI")
library
library(DBI)
drv = dbDriver("MySQL")
db <- dbConnect(RMySQL::MySQL())
db <- dbConnect(RMySQL::MySQL(), user = 'root')
foo <- dbGetQuery(db, "SELECT * FROM food_tb")
db <- dbConnect(RMySQL::MySQL(), user = 'root', db = "food_db")
foo <- dbGetQuery(db, "USE SELECT * FROM food_tb")
foo <- dbGetQuery(db, "SELECT * FROM food_tb")
head(foo)
?dbConnect
dbDisconnect()
dbDisconnect(db)
dbDisconnect(db)
?RMySQL
db <- dbConnect(RMySQL::MySQL(), port = 0, db = "food_db")
shiny::runApp('Documents/Insight Health Data Science/Project/Shiny')
shiny::runApp('Documents/Insight Health Data Science/Project/Shiny')
shiny::runApp('Documents/Insight Health Data Science/Project/Shiny')
R.Version()
shiny::runApp('Documents/Insight Health Data Science/Project/Shiny')
library(jsonlite)
library(jsonlite)
fromJSON
shiny::runApp('Documents/Insight Health Data Science/Project/Shiny')
?fromJSON
shiny::runApp('Documents/Insight Health Data Science/Project/Shiny')
restaurant_data <- read.csv("data/restaurant_ratings.csv", stringsAsFactors = FALSE)
setwd("~/Documents/Insight Health Data Science/Project/EDA/Data/")
restaurant_data <- read.csv("data/restaurant_ratings.csv", stringsAsFactors = FALSE)
# setwd("~/Documents/Insight Health Data Science/Project/EDA/")
restaurant_data <- read.csv("data/restaurant_ratings.csv", stringsAsFactors = FALSE)
# setwd("~/Documents/Insight Health Data Science/Project/Shiny")
setwd("~/Documents/Insight Health Data Science/Project/Shiny")
restaurant_data <- read.csv("data/restaurant_ratings.csv", stringsAsFactors = FALSE)
input_address <- "50 Milk Street"
input_distance <- 0.8
input_address <- "50 Milk Street"
input_distance <- 0.8
input_price <- c("$", "$$")
paste0("https://maps.googleapis.com/maps/api/geocode/json?address=",
input_address,
",+Boston,+MA")
address_call <- paste0("https://maps.googleapis.com/maps/api/geocode/json?address=",
input_address,
",+Boston,+MA")
address_data <- URLencode(address_call) %>%
getURL()
address_data
address_data <- URLencode(address_call) %>%
getURL() %>%
fromJSON(pretty = TRUE)
address_data <- URLencode(address_call) %>%
getURL() %>%
fromJSON()
address_data
address_data$results
address_data$results$address_components
address_data$results$geometry
address_data$results$geometry$location
address_data$results$geometry$location$lat
rm(list = ls())
shiny::runApp()
shiny::runApp()
restaurant_data <- dbGetQuery(con, "SELECT * FROM food_tb")
con <- dbConnect(RMySQL::MySQL(), db = "food_db")
restaurant_data <- dbGetQuery(con, "SELECT * FROM food_tb")
dbDisconnect(con)
restaurant_data
head(restaurant_data)
restaurant_data <- read.csv("data/restaurant_ratings.csv", stringsAsFactors = FALSE)
head(restaurant_data)
restaurant_data <- dbGetQuery(con, "SELECT * FROM food_tb") %>%
.[, -1]
con <- dbConnect(RMySQL::MySQL(), db = "food_db")
restaurant_data <- dbGetQuery(con, "SELECT * FROM food_tb") %>%
.[, -1]
dbDisconnect(con)
head(restaurant_data)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
restaurant_data <- read.csv("data/restaurant_ratings.csv", stringsAsFactors = FALSE)
head(restaurant_data)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rm(list = ls())
?dbConnect
con <- dbConnect(RMySQL::MySQL(),
user = "danmartin",
password = "password",
host = "foodfindrdb.cjpar6fexhjn.us-east-1.rds.amazonaws.com",
db = "food_db")
restaurant_data <- dbGetQuery(con, "SELECT * FROM food_tb") %>%
.[, -1]
dbDisconnect(con)
# Drop first column of row numbers after pulling from database
con <- dbConnect(RMySQL::MySQL(), db = "food_db")
restaurant_data <- dbGetQuery(con, "SELECT * FROM food_tb") %>%
.[, -1]
dbDisconnect(con)
rm(list = ls())
con <- dbConnect(RMySQL::MySQL(), db = "food_db")
restaurant_data <- dbGetQuery(con, "SELECT * FROM food_tb") %>%
.[, -1]
dbDisconnect(con)
con
